generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Consulta {
  id        Int      @id @default(autoincrement())
  nome      String
  cpf       String
  cnpj      String
  status    String
  criadoEm  DateTime @default(now())

  @@index([cpf])
  @@index([cnpj])
}

model Usuario {
  id                Int           @id @default(autoincrement())
  email             String        @unique
  senhaHash         String        @map("senha")
  cpf               String        @unique
  nome              String?
  telefone          String?
  nascimento        DateTime?
  cidade            String?
  uf                String?
  genero            String?
  bonusConcedidoAt  DateTime?
  role              String        @default("cliente")
  criadoEm          DateTime      @default(now())

  tokenRecuperacao  TokenRecuperacao[]
  logRecuperacoes   LogRecuperacao[]
  consultaRiscos    ConsultaRisco[]
  mensagensEnviadas Mensagem[]    @relation("MensagensDoAtendente")
}

model TokenRecuperacao {
  id         Int      @id @default(autoincrement())
  token      String   @unique
  usuarioId  Int
  criadoEm   DateTime @default(now())
  expiracao  DateTime

  Usuario    Usuario  @relation(fields: [usuarioId], references: [id])
}

model LogRecuperacao {
  id         Int      @id @default(autoincrement())
  usuarioId  Int
  ip         String
  criadoEm   DateTime @default(now())

  Usuario    Usuario  @relation(fields: [usuarioId], references: [id])
}

model DadosCNPJ {
  cnpj      String   @id
  dados     Json
  criadoEm  DateTime @default(now())
}

model ConsultaRisco {
  id          Int      @id @default(autoincrement())
  usuarioId   Int
  tipo        String
  parametro   String
  status      String
  resultado   Json
  criadoEm    DateTime @default(now())

  Usuario     Usuario  @relation(fields: [usuarioId], references: [id])

  @@index([usuarioId])
  @@index([tipo])
  @@index([status])
}

model Conversa {
  id               Int        @id @default(autoincrement())
  numero           String     @unique
  nome             String?
  ultimaMensagemEm DateTime   @default(now())
  criadoEm         DateTime   @default(now())
  atualizadoEm     DateTime   @updatedAt

  mensagens        Mensagem[]

  @@index([numero])
}

model Mensagem {
  id            Int       @id @default(autoincrement())
  conversaId    Int
  direcao       String
  conteudo      String
  timestamp     DateTime  @default(now())
  status        String?
  atendenteId   Int?

  Conversa      Conversa  @relation(fields: [conversaId], references: [id])
  Atendente     Usuario?  @relation("MensagensDoAtendente", fields: [atendenteId], references: [id])

  @@index([conversaId])
  @@index([direcao])
}
