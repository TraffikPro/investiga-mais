generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Consulta {
  id        Int      @id @default(autoincrement())
  nome      String
  cpf       String   // Pessoa f√≠sica que consultou
  cnpj      String   // CNPJ consultado
  status    String
  criadoEm  DateTime @default(now())

  @@index([cpf])
  @@index([cnpj])
}

model Usuario {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  senhaHash String @map("senha")
  cpf       String   @unique
  nome      String?
  telefone  String?
  nascimento DateTime?
  cidade    String?
  uf        String?
  genero    String?
  bonusConcedidoAt DateTime?
  role      String   @default("cliente")

  criadoEm  DateTime @default(now())

  tokenRecuperacao TokenRecuperacao[]
  logRecuperacoes  LogRecuperacao[]

  consultaRiscos   ConsultaRisco[]
}

model TokenRecuperacao {
  id         Int      @id @default(autoincrement())
  token      String   @unique
  usuarioId  Int
  criadoEm   DateTime @default(now())
  expiracao  DateTime

  Usuario    Usuario  @relation(fields: [usuarioId], references: [id])
}

model LogRecuperacao {
  id         Int      @id @default(autoincrement())
  usuarioId  Int
  ip         String
  criadoEm   DateTime @default(now())

  Usuario    Usuario  @relation(fields: [usuarioId], references: [id])
}

model DadosCNPJ {
  cnpj      String   @id
  dados     Json
  criadoEm  DateTime @default(now())
}

model ConsultaRisco {
  id          Int      @id @default(autoincrement())
  usuarioId   Int
  tipo        String   // cpf_status | ip_check | email_verify | clearsale_cpf_check
  parametro   String   // exemplo: CPF, IP, EMAIL, ORDER_ID
  status      String   // success | error
  resultado   Json
  criadoEm    DateTime @default(now())

  Usuario     Usuario  @relation(fields: [usuarioId], references: [id])

  @@index([usuarioId])
  @@index([tipo])
  @@index([status])
}